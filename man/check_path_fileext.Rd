% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_file_overwrite.R
\name{check_path_fileext}
\alias{check_path_fileext}
\title{Check if a file path has a file extension}
\usage{
check_path_fileext(
  path,
  fileext = NULL,
  message = "{.arg {arg}} must have a file extension.",
  arg = caller_arg(path),
  call = caller_env()
)
}
\arguments{
\item{path}{Character vector with file path or paths to check. Required.}

\item{fileext}{Optional file extension string. If \code{NULL}, path must have a
file extension. If fileext is a character string, all elements of path must
have a matching file extension.}

\item{message}{It is formatted via a call to \code{\link[cli:cli_bullets]{cli_bullets()}}.}

\item{arg}{An argument name as a string. This argument
will be mentioned in error messages as the input that is at the
origin of a problem.}

\item{call}{The execution environment of a currently running
function, e.g. \code{call = caller_env()}. The corresponding function
call is retrieved and mentioned in error messages as the source
of the error.

You only need to supply \code{call} when throwing a condition from a
helper function which wouldn't be relevant to mention in the
message.

Can also be \code{NULL} or a \link[rlang:topic-defuse]{defused function call} to
respectively not display any call or hard-code a code to display.

For more information about error calls, see \ifelse{html}{\link[rlang:topic-error-call]{Including function calls in error messages}}{\link[rlang:topic-error-call]{Including function calls in error messages}}.}
}
\description{
\code{\link[=check_path_fileext]{check_path_fileext()}} checks if a character vector of file paths have a file
extension or a specified file extension. Errors if any elements of do not
pass the condition.
}
